{"name":"Typesafe Config Guice","tagline":"Allows Guice Injection of configuration values from Typesafe Config","body":"# Typesafe Config Guice\r\nAllows [Guice](https://github.com/google/guice) to @Inject configuration values into your application derived from [Typesafe Config](https://github.com/typesafehub/config).\r\n\r\n[![Build Status](https://travis-ci.org/racc/typesafeconfig-guice.svg?branch=master)](https://travis-ci.org/racc/typesafeconfig-guice)\r\n\r\nAvailable on Maven: [https://oss.sonatype.org/content/repositories/releases/](https://oss.sonatype.org/content/repositories/releases/com/github/racc/typesafeconfig-guice/).\r\n \r\n```xml\r\n<dependency>\r\n    <groupId>com.github.racc</groupId>\r\n    <artifactId>typesafeconfig-guice</artifactId>\r\n    <version>0.0.1</version>\r\n</dependency>\r\n```\r\n\r\n### Quickstart\r\n#### Step 1:\r\nAnnotate configuration injection points (Constructors, Providers, Provider methods, Setter methods, Fields) with ```@TypesafeConfig(\"config.path.key\")```\r\n\r\n#### Step 2:\r\nBootstrap your application with Guice and the TypesafeConfigModule.\r\nConfiguration values annotated with @TypesafeConfig will be scanned for on the classpath, and then bound from your supplied Typesafe Config file.\r\n```java\r\nConfig config = ConfigFactory.load(\"config.conf\");\r\nInjector injector = Guice.createInjector(\r\n\tTypesafeConfigModule.fromConfig(testConf)\r\n\t// ... Add your other modules here\r\n);\r\n```\r\n\r\n#### Step 3:\r\nProfit!\r\n\r\n### Features\r\n- Plain Old Java Objects which follow JavaBean conventions (zero-args constructor, getters and setters) can be injected. \r\n- Supports injections of `java.time.Duration` objects with config parameters defined as \"10 seconds\", \"10 minutes\" etc.\r\n- Supports injections of `com.typesafe.config.ConfigMemorySize` objects with config parameters defined as \"512k\" or \"2M\" etc.\r\n- Supports injections of `boolean`, where the matching config parameter can be \"true\", \"false\", \"yes\" or \"no\".\r\n- Supports injections of List types of primitives: `boolean`, `int`, `double`, `long`, `string`, `java.time.Duration`, `com.typesafe.config.ConfigMemorySize`\r\n- Supports injections of `java.util.Map<String, Object>`\r\n- Supports injections of POJO Lists.\r\n- Extensive test coverage\r\n\r\nAUTHOR\r\n-----------\r\nJason Then (mailto:then.jason@gmail.com)\r\n\r\nAny comments and feedback appreciated!\r\n\r\nLICENSE\r\n-----------\r\nCopyright 2015 Jason Then\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}